{"version":3,"sources":["components/InputButton/index.js","components/Calculator/index.js","components/Button/index.js","components/Counter/index.js","components/ListItem/index.js","components/TextInput/index.js","components/UpdatableList/index.js","App.js","serviceWorker.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","InputButton","props","a","createElement","type","value","onClick","className","Calculator","state","number","tool","total","updateNumber","event","newNumber","_this","target","setState","Object","_Users_fabiankaegy_Webserver_React_bootcamp_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","updateTool","newTotal","eval","concat","calculateTotal","reset","calculatorNumbers","calculatorTools","_this2","this","react__WEBPACK_IMPORTED_MODULE_6___default","map","item","key","_InputButton__WEBPACK_IMPORTED_MODULE_7__","Component","Button","react_default","text","Counter","incrementNumber","decrementNumber","components_Button","ListItem","TextInput","onSubmit","name","UpdatableList","ListItems","addToList","preventDefault","joined","components_TextInput","components_ListItem","App","components_Counter","components_UpdatableList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0120b2ba.chunk.js","sourcesContent":["import React from 'react';\n\nconst InputButton = props => {\n\treturn (\n\t\t<input type=\"button\" value={props.value} onClick={props.onClick} className={props.className}/>\n\t);\n}\n\nexport default InputButton;","import React, { Component } from 'react';\nimport InputButton from '../InputButton';\nimport './style.css';\n\nclass Calculator extends Component {\n  state = {\n    number: \"\",\n    tool: \"+\",\n    total: \"0\",\n  }\n\n  updateNumber = event => {\n    const newNumber = \"\" + this.state.number + event.target.value;\n    this.setState({\n      ...this.state,\n      number: newNumber,\n    })\n  }\n\n  updateTool = event => {\n    this.setState({\n      ...this.state,\n      tool: event.target.value,\n    })\n\n    const newTotal = eval(`${this.state.total}  ${this.state.tool} ${this.state.number}`);\n    this.setState({\n      ...this.state,\n      tool: event.target.value,\n      number: \"\",\n      total: newTotal,\n    })\n  }\n\n  calculateTotal = () => {\n    const total = eval(`${this.state.total} ${this.state.tool} ${this.state.number}`)\n    this.setState({\n      ...this.state,\n      number: total,\n    })\n  }\n\n  reset = () => {\n    this.setState({\n      number: \"\",\n      tool: \"+\",\n      total: \"0\",\n    })\n  }\n\n  calculatorNumbers = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"0\"];\n  calculatorTools = [\"+\",\"-\",\"*\",\"/\",\"%\"];\n\n  render() {\n    return (\n      <div className=\"calculator\">\n        <div className=\"wrapper\">\n          <h3>{this.state.number}</h3>\n          <input type=\"button\" value=\"AC\" onClick={ this.reset } />\n          { \n            this.calculatorNumbers.map( (item, key) => (\n              <InputButton key={key} value={item} onClick={ this.updateNumber } />\n            ))\n          }\n          { \n            this.calculatorTools.map( ( item, key ) => (\n              <InputButton key={key} value={item} onClick={this.updateTool} className=\"tool\" />\n            ) ) \n          }\n          <input type=\"button\" value=\"=\" onClick={ this.calculateTotal } className=\"tool\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from 'react';\nimport './button.css';\n\nconst Button = props => {\n\treturn (\n\t\t<button onClick={ props.onClick }>{props.text}</button>\n\t);\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport Button from '../Button';\n\nclass Counter extends Component {\n  state = {\n    number: 0,\n  }\n\n  incrementNumber = () => { \n    this.setState( {\n      number: this.state.number + 1,\n    } );\n  };\n  decrementNumber = () => { \n    this.setState( {\n      number: this.state.number - 1,\n    } );\n  };\n\n  render() {\n    return (\n      <div className=\"Counter\">\n        <h3>Count: {this.state.number}</h3>\n        <Button onClick={this.incrementNumber} text=\"Add\" />\n        <Button onClick={this.decrementNumber} text=\"Substract\" />\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import React from 'react';\n\nconst ListItem = props => {\n\treturn (\n\t\t<li>{props.text}</li>\n\t);\n}\n\nexport default ListItem;","import React from 'react';\nimport './style.css';\n\nconst TextInput = props => {\n\treturn (\n\t\t<form onSubmit={props.onSubmit}>\n\t\t\t<input type=\"text\" name=\"TextInput\" />\n\t\t\t<input type=\"submit\" />\n\t\t</form>\n\t);\n}\n\nexport default TextInput;","import React, { Component } from 'react';\nimport './style.css';\nimport ListItem from '../ListItem';\nimport TextInput from '../TextInput';\n\nclass UpdatableList extends Component {\n  state = {\n    ListItems: []\n  }\n  addToList = (event) => { \n    event.preventDefault();\n    var joined = this.state.ListItems.concat(event.target.TextInput.value);\n    this.setState( {\n      ListItems: joined,\n    } );\n    event.target.TextInput.value = '';\n  };\n  render() {\n    return (\n      <div className=\"updatable-list\">\n        <TextInput onSubmit={this.addToList} />\n        {this.state.ListItems.map( (item, key) => <ListItem key={key} text={item} />)}\n      </div>\n    );\n  }\n}\n\nexport default UpdatableList;\n","import React, { Component } from 'react';\nimport Counter from './components/Counter';\nimport UpdatableList from './components/UpdatableList';\nimport Calculator from './components/Calculator';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>JS4WP - Study Group - React Week</h1> \n        <div className=\"excercise\">\n          <h2>Example 1: Counter</h2>\n          <p>Build a counter component that stores a count in state and lets you increment and decrement the count using two buttons.</p>\n          <Counter />\n        </div>\n        <hr />\n        <div className=\"excercise\">\n          <h2>Example 2: Updatable List</h2>\n          <p>Build a Form with a Text Input Field. When the form gets submitted the Text Value of the Input should be added to a list stored in state that renders a ListItem Component for each Element in it.</p>\n          <UpdatableList />\n        </div>\n        <hr />\n        <div className=\"excercise late\">\n          <h2>Example 3: Calculator</h2>\n          <p>Build a simple traditional Calculator</p>\n          <Calculator />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}